---
import ImageMod from "@/components/ImageMod.astro";
import Pagination from "@/components/Pagination.astro";
import Social from "@/components/Social.astro";
import Base from "@/layouts/Base.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { markdownify } from "@/lib/utils/textConverter";
import type { Button, Feature } from "@/types";

import config from "@/config/config.json";
import social from "@/config/social.json";
import { getSinglePage } from "@/lib/contentParser.astro";

// import Pagination from "@layouts/components/Pagination";
// import Post from "@layouts/components/Post";
// import Social from "@layouts/components/Social";
const { blog_folder } = config.settings;
const posts = await getSinglePage("posts");
const { pagination } = config.settings;
const { name, image, designation, bio } = config.profile;
const sortPostByDate = sortByDate(posts);
import mmm from "@/pages/mmm.mp3";


interface Homepage {
  banner: {
    title: string;
    content: string;
    image: string;
    button: Button;
  };
  features: Feature[];
}
---

<Base>
  {/* profile */}
  <div class="section">
    <div class="container">
      <div class="row">
        <div class="mx-auto text-center lg:col-8">
          <ImageMod
            class="mx-auto rounded-full"
            src={image}
            width={220}
            height={220}
            alt={name}
          />
          <h1
            set:html={markdownify(name)}
            class="mt-12 text-6xl lg:text-8xl font-semibold"
          />
          <p
            set:html={markdownify(designation)}
            class="mt-6 text-primary text-xl"
          />
          <p set:html={markdownify(bio)} class="mt-4 leading-9 text-xl" />
          <Social source={social.main} className="social-icons mt-8" />
        </div>
      </div>
    </div>
  </div>


  <div class="w-full">
    <div class='flex w-6/12  bg-body shadow-md rounded-lg overflow-hidden mx-auto'>
      <div class="flex flex-col w-full">
        <!-- <div class="flex p-5 pb-0">
            <img class='w-20 h-0 object-cover' alt='User avatar' src='/images/developer.png'>
            <div class="flex flex-col px-2 w-full">
              <span class="text-xs text-gray-400 uppercase font-medium ">
                now playing
              </span>
              <span class="text-sm text-purple-400 capitalize font-semibold pt-1">
                my songer
              </span>
              <span class="text-xs text-gray-300 uppercase font-medium ">
                -"from the ," aidan
              </span>

            </div>
        </div>-->



        <div class="flex flex-col sm:flex-row items-center p-5 pt-2 pb-2">
          <div class="flex-1 items-center">
            <div class="flex p-2">

              <button id="play-pause-btn" class="rounded-full w-11/12 h-10 flex items-center justify-center pl-0.5 ring-2 ring-purple-400 focus:outline-none">
                <p>Lo-fi</p>

                <div class="px-5">
                  <svg id="play-pause-icon" class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="#a855f7" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>
                </div>
              </button>

            </div>
          </div>

          <!--<div class="flex justify-end w-full sm:w-auto pt-1 sm:pt-0">
            <span id="timer" class="text-xs text-gray-300 uppercase font-medium pl-2">
            
            </span>
          </div> -->

        </div>
          
      </div>
    </div>
  </div>
  
  <audio id="audio-player">

    <source src={mmm} type="audio/mpeg">

  </audio>

  <script>
    import music from "@/config/music.json";

    const playPauseBtn = document.getElementById("play-pause-btn")!;
    const playPauseIcon = document.getElementById("play-pause-icon")!;
    const audioPlayer = document.getElementById("audio-player")! as HTMLAudioElement;
    const timer = document.getElementById("timer")!;
    const playlist = document.getElementById("playlist")!;
    
    document.addEventListener("astro:after-swap", () => {
      music.forEach(song => {

        playlist.innerHTML += `

          <div class="flex p-2">

            <button id="play-pause-btn" class="rounded-full w-11/12 h-10 flex items-center justify-center pl-0.5 ring-2 ring-purple-400 focus:outline-none">
              <p>` + song.title + `</p>

              <div class="px-5">
                <svg id="play-pause-icon" class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="#a855f7" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>
              </div>
            </button>

          </div>
        `;








        /*<div class="bg-black bg-opacity-15 rounded-md flex border-b-3 pt-1 pb-3 cursor-pointer hover:shadow-md px-2 mt-1 mb-1">
          <img class='w-10 h-10 object-cover rounded-lg' alt='User avatar' src='/images/developer.png'>
          <div class="flex flex-col px-4 w-full pb-2">
              <span class="text-sm text-purple-400 capitalize font-semibold pt-1">
                ` + song.title + `
              </span>
              <span class="text-xs text-gray-300 uppercase font-medium ">
                ` + song.file + `
              </span>
          </div>
        </div>*/

    })});

    playPauseBtn.addEventListener("click", () => {
      if (audioPlayer.paused) {
        audioPlayer.play();
        playPauseIcon.innerHTML = `
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect x="5" y="5" width="3" height="14" rx="2" fill="#a855f7" stroke="#a855f7 " stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
            <rect x="13" y="5" width="3" height="14" rx="2" fill="#a855f7" stroke="#a855f7 " stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        `;
      } else {
        audioPlayer.pause();
        playPauseIcon.innerHTML = `
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="#a855f7" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>
        `;
      }
    });

    audioPlayer.onloadedmetadata = function() {
      var seconds = Math.round(audioPlayer.duration) % 60;
      var minutes = Math.floor(audioPlayer.duration / 60);
      timer.innerHTML = minutes + ":" + seconds;
    };
  </script>




</Base>
